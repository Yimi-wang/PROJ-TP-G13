
example3_sortie:     file format elf32-littlearm
example3_sortie
architecture: armv3m, flags 0x00000011:
HAS_RELOC, HAS_SYMS
start address 0x00000000
private flags = 5000000: [Version5 EABI]

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         0000003c  00000000  00000000  00000034  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
  1 .data         0000003c  00000000  00000000  00000070  2**2
                  CONTENTS, ALLOC, LOAD, RELOC, DATA
  2 .bss          00000000  00000000  00000000  000000ac  2**0
                  ALLOC
  3 .ARM.attributes 00000012  00000000  00000000  000000ac  2**0
                  CONTENTS, READONLY
SYMBOL TABLE:
00000058 l    d  .text	00000000 .text
00001000 l    d  .data	00000000 .data
00000000 l    d  .bss	00000000 .bss
00001008 l       .data	00000000 data_local
00000080 l       .text	00000000 suite
00001038 l       .data	00000000 fin
00000000 l    d  .ARM.attributes	00000000 .ARM.attributes
0000005c g       .text	00000000 main
00001018 g       .data	00000000 data_global



Disassembly of section .text:

00000000 <main-0x5c>:
   0:	e1a00000 	nop			; (mov r0, r0)
   4:	eb000000 	bl	1008 <data_local>
			4: R_ARM_CALL	.data
   8:	ebfffffe 	bl	1018 <data_global>
			8: R_ARM_CALL	data_global
   c:	ea000000 	b	1008 <data_local>
			c: R_ARM_JUMP24	.data
  10:	eafffffe 	b	1018 <data_global>
			10: R_ARM_JUMP24	data_global
  14:	eb000003 	bl	28 <main-0x34>
  18:	03ffffec 	mvnseq	pc, #236, 30	; 0x3b0
			18: R_ARM_CALL	main
  1c:	ea000001 	b	28 <main-0x34>
  20:	03ffffe4 	mvnseq	pc, #228, 30	; 0x390
			20: R_ARM_JUMP24	main
  24:	e1a00000 	nop			; (mov r0, r0)
  28:	e1a0f00e 	mov	pc, lr
  2c:	00000058 	andeq	r0, r0, r8, asr r0
			2c: R_ARM_ABS32	.text
  30:	0000005c 	andeq	r0, r0, ip, asr r0
			30: R_ARM_ABS32	main
  34:	00000008 	andeq	r0, r0, r8
			34: R_ARM_ABS32	.data
  38:	00000000 	andeq	r0, r0, r0
			38: R_ARM_ABS32	data_global

Disassembly of section .data:

00000000 <data_local-0x1008>:
	...
   8:	00000028 	andeq	r0, r0, r8, lsr #32
			8: R_ARM_ABS32	.text
   c:	00000000 	andeq	r0, r0, r0
			c: R_ARM_ABS32	main
  10:	00001000 	andeq	r1, r0, r0
			10: R_ARM_ABS32	.data
  14:	00001018 	andeq	r1, r0, r8, lsl r0
			14: R_ARM_ABS32	data_global
  18:	ebfffffa 	bl	8 <data_local-0x1000>
  1c:	03fffffc 	mvnseq	pc, #252, 30	; 0x3f0
			1c: R_ARM_CALL	data_global
  20:	eafffff8 	b	8 <data_local-0x1000>
  24:	03fffff4 	mvnseq	pc, #244, 30	; 0x3d0
			24: R_ARM_JUMP24	data_global
  28:	eb000008 	bl	80 <suite>
			28: R_ARM_CALL	.text
  2c:	ebfffffe 	bl	5c <main>
			2c: R_ARM_CALL	main
  30:	ea000008 	b	80 <suite>
			30: R_ARM_JUMP24	.text
  34:	eafffffe 	b	5c <main>
			34: R_ARM_JUMP24	main
  38:	00000000 	andeq	r0, r0, r0

Disassembly of section .ARM.attributes:

00000000 <.ARM.attributes>:
   0:	00001141 	andeq	r1, r0, r1, asr #2
   4:	61656100 	cmnvs	r5, r0, lsl #2
   8:	01006962 	tsteq	r0, r2, ror #18
   c:	00000007 	andeq	r0, r0, r7
  10:	Address 0x0000000000000010 is out of bounds.

